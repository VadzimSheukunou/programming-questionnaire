{"version":3,"sources":["../../src/controllers/questionnaire.controller.js"],"names":["QuestionnaireController","req","res","status","json","models","Questionnaire","findByPk","params","questId","questionnaire","message","findAll","questionaries"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;IAGqBA,uB;;;;;;;;;;;;oDACCC,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAGkBH,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAGkBH,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;AAGF;;;;;;;;;;;;qDAMiBH,G,EAAKC,G;;;;;;;;uBAEUG,qBAAOC,aAAP,CAAqBC,QAArB,WAAiCN,GAAG,CAACO,MAAJ,CAAWC,OAA5C,E;;;AAAtBC,gBAAAA,a;AAENR,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,aAArB;;;;;;;AAEAR,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBO,kBAAAA,OAAO,YAAK,aAAMA,OAAX;AADY,iBAArB;;;;;;;;;;;;;;;;AAMJ;;;;;;;;;;;;qDAMoBV,G,EAAKC,G;;;;;;;;uBAEOG,qBAAOC,aAAP,CAAqBM,OAArB,E;;;AAAtBC,gBAAAA,a;AAENX,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBS,aAArB;;;;;;;AAEAX,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBO,kBAAAA,OAAO,YAAK,aAAMA,OAAX;AADY,iBAArB","sourcesContent":["import models from '../db-models';\r\n\r\n/**\r\n * Questionnaire CRUD operations controller\r\n */\r\nexport default class QuestionnaireController {\r\n  static async create(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async update(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async delete(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  /**\r\n   * Get specific Questionnaire by ID\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async get(req, res) {\r\n    try {\r\n      const questionnaire = await models.Questionnaire.findByPk(`${req.params.questId}`);\r\n\r\n      res.status(200).json(questionnaire);\r\n    } catch (error) {\r\n      res.status(400).json({\r\n        message: `${error.message}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all Questionnaires\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async getAll(req, res) {\r\n    try {\r\n      const questionaries = await models.Questionnaire.findAll();\r\n\r\n      res.status(200).json(questionaries);\r\n    } catch (error) {\r\n      res.status(400).json({\r\n        message: `${error.message}`,\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"file":"questionnaire.controller.js"}