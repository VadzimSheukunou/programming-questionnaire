{"version":3,"sources":["../../src/controllers/progress.controller.js"],"names":["ProgressController","req","res","payload","body","models","Progress","create","isComplete","userId","questionnaireId","user","status","json","message","progressId","params","ProgressService","updateCurrentUserProgress","result","getCombinedProgress"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;IAGqBA,kB;;;;;;;;;;AACnB;;;;;;;;;oDAMoBC,G,EAAKC,G;;;;;;AACjBC,gBAAAA,O,GAAUF,GAAG,CAACG,IAAJ,IAAY,E;;;uBAGPC,qBAAOC,QAAP,CAChBC,MADgB,CACT;AACNC,kBAAAA,UAAU,EAAE,KADN;AAENC,kBAAAA,MAAM,EAAEN,OAAO,CAACM,MAFV;AAGNC,kBAAAA,eAAe,EAAEP,OAAO,CAACO;AAHnB,iBADS,C;;;AAAbC,gBAAAA,I;AAONT,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,IAArB;;;;;;;AAEAT,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,YAAMC,OAA3B;;;;;;;;;;;;;;;;AAIJ;;;;;;;;;;;;qDAMoBb,G,EAAKC,G;;;;;;AACjBa,gBAAAA,U,GAAad,GAAG,CAACe,MAAJ,CAAWD,U;AACxBZ,gBAAAA,O,GAAUF,GAAG,CAACG,IAAJ,IAAY,E;;;uBAGLa,0BAAgBC,yBAAhB,CAA0CH,UAA1C,EAAsDZ,OAAtD,C;;;AAAfgB,gBAAAA,M;AACNjB,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,MAArB;;;;;;;AAEAjB,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAAMC,OAA3B;;;;;;;;;;;;;;;;;;;;;qDAIgBb,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAGeZ,G,EAAKC,G;;;;;AACpBA,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;AAGF;;;;;;;;;;;;qDAMoBZ,G,EAAKC,G;;;;;;AACjBO,gBAAAA,M,GAASR,GAAG,CAACe,MAAJ,CAAWP,M;;;uBAGHQ,0BAAgBG,mBAAhB,CAAoCX,MAApC,C;;;AAAfU,gBAAAA,M;AACNjB,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,MAArB;;;;;;;AAEAjB,gBAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,kBAAAA,OAAO,YAAK,aAAMA,OAAX;AADY,iBAArB","sourcesContent":["import models from '../db-models';\r\nimport { ProgressService } from '../services';\r\n\r\n/**\r\n * Progress CRUD operations controller\r\n */\r\nexport default class ProgressController {\r\n  /**\r\n   * Create Progress record\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async create(req, res) {\r\n    const payload = req.body || {};\r\n\r\n    try {\r\n      const user = await models.Progress\r\n        .create({\r\n          isComplete: false,\r\n          userId: payload.userId,\r\n          questionnaireId: payload.questionnaireId\r\n        });\r\n\r\n      res.status(201).json(user);\r\n    } catch (error) {\r\n      res.status(400).json(error.message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update existing Progress record\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async update(req, res) {\r\n    const progressId = req.params.progressId;\r\n    const payload = req.body || {};\r\n    \r\n    try {\r\n      const result = await ProgressService.updateCurrentUserProgress(progressId, payload);\r\n      res.status(200).json(result);\r\n    } catch (error) {\r\n      res.status(400).json(error.message);\r\n    }\r\n  }\r\n\r\n  static async delete(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async get(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  /**\r\n   * Get all Progresses for a specific User\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async getAll(req, res) {\r\n    const userId = req.params.userId;\r\n\r\n    try {\r\n      const result = await ProgressService.getCombinedProgress(userId);\r\n      res.status(200).json(result);\r\n    } catch (error) {\r\n      res.status(400).json({\r\n        message: `${error.message}`,\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"file":"progress.controller.js"}