{"version":3,"sources":["../../src/controllers/answer.controller.js"],"names":["AnswerController","req","res","status","json","questionId","params","models","Answer","findAll","where","answers","send","message"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AAEA;;;IAGqBA,gB;;;;;;;;;;;;oDACCC,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAGkBH,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAGkBH,G,EAAKC,G;;;;;AACvBA,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;;;;;;qDAGeH,G,EAAKC,G;;;;;AACpBA,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iBAArB;;;;;;;;;;;;;;;;AAGF;;;;;;;;;;;;qDAMoBH,G,EAAKC,G;;;;;;AACjBG,gBAAAA,U,GAAaJ,GAAG,CAACK,MAAJ,CAAWD,U;;;uBAGNE,qBAAOC,MAAP,CAAcC,OAAd,CAAsB;AAC1CC,kBAAAA,KAAK,EAAE;AACLL,oBAAAA,UAAU,EAAEA;AADP;AADmC,iBAAtB,C;;;AAAhBM,gBAAAA,O;AAMNT,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBO,OAArB;;;;;;;AAEAT,gBAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBS,IAAhB,CAAqB;AACnBC,kBAAAA,OAAO,YAAK,aAAMA,OAAX;AADY,iBAArB","sourcesContent":["import models from '../db-models';\r\n\r\n/**\r\n * Answer CRUD operations controller\r\n */\r\nexport default class AnswerController {\r\n  static async create(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async update(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async delete(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  static async get(req, res) {\r\n    res.status(501).json('not implemented');\r\n  }\r\n\r\n  /**\r\n   * Get all Answers for the specified Question ID\r\n   * \r\n   * @param {Object} req \r\n   * @param {Object} res \r\n   */\r\n  static async getAll(req, res) {\r\n    const questionId = req.params.questionId;\r\n    \r\n    try {\r\n      const answers = await models.Answer.findAll({\r\n        where: {\r\n          questionId: questionId\r\n        }\r\n      });\r\n\r\n      res.status(200).json(answers);\r\n    } catch (error) {\r\n      res.status(400).send({\r\n        message: `${error.message}`,\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"file":"answer.controller.js"}