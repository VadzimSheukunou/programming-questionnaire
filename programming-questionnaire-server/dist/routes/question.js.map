{"version":3,"sources":["../../src/routes/question.js"],"names":["router","post","checkToken","QuestionController","create","put","update","get","getAll"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEA;;;;;;;;;;AASAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBC,uBAAjB,EAA6BC,gCAAmBC,MAAhD;AAEA;;;;;;;;;;AASAJ,MAAM,CAACK,GAAP,CAAW,cAAX,EAA2BH,uBAA3B,EAAuCC,gCAAmBG,MAA1D;AAEA;;;;;;;;;;AASAN,MAAM,UAAN,CAAc,cAAd,EAA8BE,uBAA9B,EAA0CC,yCAA1C;AAEA;;;;;;;;;;AASAH,MAAM,CAACO,GAAP,CAAW,cAAX,EAA2BL,uBAA3B,EAAuCC,gCAAmBI,GAA1D;AAEA;;;;;;;;;;AASAP,MAAM,CAACO,GAAP,CAAW,iBAAX,EAA8BL,uBAA9B,EAA0CC,gCAAmBK,MAA7D;eAEeR,M","sourcesContent":["import { Router } from 'express';\r\nimport { checkToken } from '../middlewares';\r\nimport { QuestionController } from '../controllers';\r\n\r\nconst router = Router();\r\n\r\n/**\r\n * Route serving question creation\r\n * \r\n * @name post/\r\n * @memberof module:routers/question~questionsRouter\r\n * @param {String} path - Express path\r\n * @param {Function} middleware - Express middleware\r\n * @param {Function} middleware - Express middleware\r\n */\r\nrouter.post('/', checkToken, QuestionController.create);\r\n\r\n/**\r\n * Route serving question update\r\n * \r\n * @name put/:questionId\r\n * @memberof module:routers/question~questionsRouter\r\n * @param {String} path - Express path\r\n * @param {Function} middleware - Express middleware\r\n * @param {Function} middleware - Express middleware\r\n */\r\nrouter.put('/:questionId', checkToken, QuestionController.update);\r\n\r\n/**\r\n * Route serving question removal\r\n * \r\n * @name delete/:questionId\r\n * @memberof module:routers/question~questionsRouter\r\n * @param {String} path - Express path\r\n * @param {Function} middleware - Express middleware\r\n * @param {Function} middleware - Express middleware\r\n */\r\nrouter.delete('/:questionId', checkToken, QuestionController.delete);\r\n\r\n/**\r\n * Route serving question retrieval\r\n * \r\n * @name get/:questionId\r\n * @memberof module:routers/question~questionsRouter\r\n * @param {String} path - Express path\r\n * @param {Function} middleware - Express middleware\r\n * @param {Function} middleware - Express middleware\r\n */\r\nrouter.get('/:questionId', checkToken, QuestionController.get);\r\n\r\n/**\r\n * Route serving questions retrieval by Questionnaire ID (All questions relevant to a Questionnaire)\r\n * \r\n * @name get/quest/:questId\r\n * @memberof module:routers/question~questionsRouter\r\n * @param {String} path - Express path\r\n * @param {Function} middleware - Express middleware\r\n * @param {Function} middleware - Express middleware\r\n */\r\nrouter.get('/quest/:questId', checkToken, QuestionController.getAll);\r\n\r\nexport default router;\r\n"],"file":"question.js"}